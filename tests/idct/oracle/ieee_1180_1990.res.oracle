[kernel] Parsing tests/idct/ieee_1180_1990.c (with preprocessing)
[kernel:parser:decimal-float] tests/idct/ieee_1180_1990.c:101: Warning: 
  Floating-point constant 3.14159265358979323846 is not represented exactly. Will use 0x1.921fb54442d18p1.
  (warn-once: no further messages from category 'parser:decimal-float' will be emitted)
[kernel] Parsing tests/idct/idct.c (with preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  M1[0..7][0..7] ∈ {0}
  IEEE_1180_1990_rand_randx ∈ {1}
  IEEE_1180_1990_rand_z ∈ {1.9999999990686774*2^30}
  IEEE_1180_1990_dctf_mcos[0..7][0..7] ∈ {0}
  IEEE_1180_1990_dctf_init ∈ {1}
  IEEE_1180_1990_idctf_mcos[0..7][0..7] ∈ {0}
  IEEE_1180_1990_idctf_init ∈ {1}
  idct_init ∈ {1}
  idct_mc1[0..7][0..7] ∈ {0}
  idct_mc2[0..7][0..7] ∈ {0}
[eva] tests/idct/ieee_1180_1990.c:179: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:178: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:185: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:184: starting to merge loop iterations
[eva] computing for function idct <- main.
  Called from tests/idct/ieee_1180_1990.c:187.
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:90: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/idct/idct.c:90: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:91: 
  function cos: precondition 'finite_arg' got status valid.
[eva] tests/idct/idct.c:88: starting to merge loop iterations
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:87: starting to merge loop iterations
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:90: Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/idct.c:91: Call to builtin Frama_C_cos for function cos
[eva] tests/idct/idct.c:128: starting to merge loop iterations
[eva] tests/idct/idct.c:126: starting to merge loop iterations
[eva:alarm] tests/idct/idct.c:129: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:131: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:141: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:143: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:145: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:147: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:150: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva] tests/idct/idct.c:141: Warning: 2's complement assumed for overflow
[eva] tests/idct/idct.c:125: starting to merge loop iterations
[eva] tests/idct/idct.c:163: Warning: 2's complement assumed for overflow
[eva:alarm] tests/idct/idct.c:163: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[k][j]);
[eva] tests/idct/idct.c:162: starting to merge loop iterations
[eva] tests/idct/idct.c:160: starting to merge loop iterations
[eva:alarm] tests/idct/idct.c:163: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:166: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva] tests/idct/idct.c:176: Warning: 2's complement assumed for overflow
[eva:alarm] tests/idct/idct.c:176: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:178: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:180: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:182: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva:alarm] tests/idct/idct.c:185: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva] tests/idct/idct.c:159: starting to merge loop iterations
[eva] Recording results for idct
[eva] Done for function idct
[eva:alarm] tests/idct/ieee_1180_1990.c:191: Warning: 
  accessing uninitialized left-value. assert \initialized(&m2[i][j]);
[eva] tests/idct/ieee_1180_1990.c:190: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:189: starting to merge loop iterations
[eva] computing for function printf_va_1 <- main.
  Called from tests/idct/ieee_1180_1990.c:195.
[eva] using specification for function printf_va_1
[eva] tests/idct/ieee_1180_1990.c:195: 
  function printf_va_1: precondition got status valid.
[eva] Done for function printf_va_1
[eva] computing for function printf_va_2 <- main.
  Called from tests/idct/ieee_1180_1990.c:196.
[eva] using specification for function printf_va_2
[eva] tests/idct/ieee_1180_1990.c:196: 
  function printf_va_2: precondition got status valid.
[eva] Done for function printf_va_2
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:211.
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:84: starting to merge loop iterations
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] tests/idct/ieee_1180_1990.c:69: Warning: 
  2's complement assumed for overflow
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:83: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] computing for function IEEE_1180_1990_dctf <- main.
  Called from tests/idct/ieee_1180_1990.c:212.
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:100: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/idct/ieee_1180_1990.c:100: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  function cos: precondition 'finite_arg' got status valid.
[eva] tests/idct/ieee_1180_1990.c:99: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:98: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:108: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:105: starting to merge loop iterations
[eva:alarm] tests/idct/ieee_1180_1990.c:109: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva] tests/idct/ieee_1180_1990.c:104: starting to merge loop iterations
[eva:alarm] tests/idct/ieee_1180_1990.c:116: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][k]);
[eva] tests/idct/ieee_1180_1990.c:115: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:112: starting to merge loop iterations
[eva:alarm] tests/idct/ieee_1180_1990.c:116: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:117: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:119: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:121: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:122: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:122: Warning: 
  overflow in conversion from floating-point to integer.
  assert -2147483649 < tmp2[i][j] + 0.5;
[eva:alarm] tests/idct/ieee_1180_1990.c:122: Warning: 
  overflow in conversion from floating-point to integer.
  assert tmp2[i][j] + 0.5 < 2147483648;
[eva:alarm] tests/idct/ieee_1180_1990.c:124: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:124: Warning: 
  overflow in conversion from floating-point to integer.
  assert -2147483649 < tmp2[i][j] - 0.5;
[eva:alarm] tests/idct/ieee_1180_1990.c:124: Warning: 
  overflow in conversion from floating-point to integer.
  assert tmp2[i][j] - 0.5 < 2147483648;
[eva] tests/idct/ieee_1180_1990.c:111: starting to merge loop iterations
[eva] Recording results for IEEE_1180_1990_dctf
[eva] Done for function IEEE_1180_1990_dctf
[eva] computing for function IEEE_1180_1990_idctf <- main.
  Called from tests/idct/ieee_1180_1990.c:213.
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:140: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/idct/ieee_1180_1990.c:140: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:141: 
  function cos: precondition 'finite_arg' got status valid.
[eva] tests/idct/ieee_1180_1990.c:139: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:138: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva:alarm] tests/idct/ieee_1180_1990.c:150: Warning: 
  accessing uninitialized left-value. assert \initialized(&(*(m1 + k))[j]);
[eva] tests/idct/ieee_1180_1990.c:149: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:146: starting to merge loop iterations
[eva:alarm] tests/idct/ieee_1180_1990.c:150: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][j]);
[eva] tests/idct/ieee_1180_1990.c:145: starting to merge loop iterations
[eva:alarm] tests/idct/ieee_1180_1990.c:157: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp1[i][k]);
[eva] tests/idct/ieee_1180_1990.c:156: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:153: starting to merge loop iterations
[eva:alarm] tests/idct/ieee_1180_1990.c:157: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:158: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:160: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:162: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:163: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:163: Warning: 
  overflow in conversion from floating-point to integer.
  assert -2147483649 < tmp2[i][j] + 0.5;
[eva:alarm] tests/idct/ieee_1180_1990.c:163: Warning: 
  overflow in conversion from floating-point to integer.
  assert tmp2[i][j] + 0.5 < 2147483648;
[eva:alarm] tests/idct/ieee_1180_1990.c:165: Warning: 
  accessing uninitialized left-value. assert \initialized(&tmp2[i][j]);
[eva:alarm] tests/idct/ieee_1180_1990.c:165: Warning: 
  overflow in conversion from floating-point to integer.
  assert -2147483649 < tmp2[i][j] - 0.5;
[eva:alarm] tests/idct/ieee_1180_1990.c:165: Warning: 
  overflow in conversion from floating-point to integer.
  assert tmp2[i][j] - 0.5 < 2147483648;
[eva] tests/idct/ieee_1180_1990.c:152: starting to merge loop iterations
[eva] Recording results for IEEE_1180_1990_idctf
[eva] Done for function IEEE_1180_1990_idctf
[eva] computing for function idct <- main.
  Called from tests/idct/ieee_1180_1990.c:214.
[eva] tests/idct/idct.c:129: Warning: 2's complement assumed for overflow
[eva:alarm] tests/idct/idct.c:129: Warning: 
  accessing uninitialized left-value. assert \initialized(&(*(m1 + k))[j]);
[eva] Recording results for idct
[eva] Done for function idct
[eva] tests/idct/ieee_1180_1990.c:218: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:218: Warning: 
  accessing uninitialized left-value. assert \initialized(&m3[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:218: Warning: 
  accessing uninitialized left-value. assert \initialized(&m4[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:219: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[0].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:220: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:230: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:231: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[0].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:216: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:219: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:231: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:215: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:234: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:233: starting to merge loop iterations
[eva] computing for function IEEE_1180_1990_dctf <- main.
  Called from tests/idct/ieee_1180_1990.c:236.
[eva] Recording results for IEEE_1180_1990_dctf
[eva] Done for function IEEE_1180_1990_dctf
[eva] computing for function IEEE_1180_1990_idctf <- main.
  Called from tests/idct/ieee_1180_1990.c:237.
[eva] Recording results for IEEE_1180_1990_idctf
[eva] Done for function IEEE_1180_1990_idctf
[eva] computing for function idct <- main.
  Called from tests/idct/ieee_1180_1990.c:238.
[eva] Recording results for idct
[eva] Done for function idct
[eva] tests/idct/ieee_1180_1990.c:242: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:242: Warning: 
  accessing uninitialized left-value. assert \initialized(&m3[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:242: Warning: 
  accessing uninitialized left-value. assert \initialized(&m4[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:243: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[3].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:244: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:254: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:255: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[3].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:240: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:243: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:255: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:239: starting to merge loop iterations
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:257.
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:264: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:264: Warning: 
  accessing uninitialized left-value. assert \initialized(&m3[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:264: Warning: 
  accessing uninitialized left-value. assert \initialized(&m4[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:265: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[1].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:266: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:276: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:277: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[1].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:262: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:265: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:277: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:261: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:280: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:279: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:288: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:288: Warning: 
  accessing uninitialized left-value. assert \initialized(&m3[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:288: Warning: 
  accessing uninitialized left-value. assert \initialized(&m4[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:289: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[4].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:290: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:300: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:301: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[4].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:286: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:289: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:301: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:285: starting to merge loop iterations
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:303.
[eva] computing for function IEEE_1180_1990_rand <- IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:85.
[eva] Recording results for IEEE_1180_1990_rand
[eva] Done for function IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:310: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:310: Warning: 
  accessing uninitialized left-value. assert \initialized(&m3[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:310: Warning: 
  accessing uninitialized left-value. assert \initialized(&m4[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:311: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[2].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:312: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:322: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:323: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[2].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:308: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:311: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:323: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:307: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:326: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:325: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:334: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:334: Warning: 
  accessing uninitialized left-value. assert \initialized(&m3[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:334: Warning: 
  accessing uninitialized left-value. assert \initialized(&m4[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:335: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[5].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:336: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:346: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:347: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[5].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:332: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:335: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:347: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:331: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:202: starting to merge loop iterations
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:211.
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] computing for function IEEE_1180_1990_dctf <- main.
  Called from tests/idct/ieee_1180_1990.c:212.
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] Recording results for IEEE_1180_1990_dctf
[eva] Done for function IEEE_1180_1990_dctf
[eva] computing for function IEEE_1180_1990_idctf <- main.
  Called from tests/idct/ieee_1180_1990.c:213.
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:140: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:141: 
  Call to builtin Frama_C_cos for function cos
[eva] Recording results for IEEE_1180_1990_idctf
[eva] Done for function IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:235: Warning: 
  2's complement assumed for overflow
[eva] computing for function IEEE_1180_1990_dctf <- main.
  Called from tests/idct/ieee_1180_1990.c:236.
[eva] Recording results for IEEE_1180_1990_dctf
[eva] Done for function IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:237: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:238: Reusing old results for call to idct
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:257.
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:281: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:303.
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:327: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] computing for function IEEE_1180_1990_mkbk <- main.
  Called from tests/idct/ieee_1180_1990.c:211.
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] tests/idct/ieee_1180_1990.c:85: 
  Reusing old results for call to IEEE_1180_1990_rand
[eva] Recording results for IEEE_1180_1990_mkbk
[eva] Done for function IEEE_1180_1990_mkbk
[eva] computing for function IEEE_1180_1990_dctf <- main.
  Called from tests/idct/ieee_1180_1990.c:212.
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/idct/ieee_1180_1990.c:100: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/idct/ieee_1180_1990.c:101: 
  Call to builtin Frama_C_cos for function cos
[eva] Recording results for IEEE_1180_1990_dctf
[eva] Done for function IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:213: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:236: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:237: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:238: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:257: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:303: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:211: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:212: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:213: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:236: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:237: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:238: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:257: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:303: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:211: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:212: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:213: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:236: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:237: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:238: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:257: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:303: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:211: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:212: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:213: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:236: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:237: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:238: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:257: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:303: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:211: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:212: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:213: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:236: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:237: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:238: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:257: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:258: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:259: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:260: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:282: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:283: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:284: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:303: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:304: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:305: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:306: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:328: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:329: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:330: Reusing old results for call to idct
[eva] tests/idct/ieee_1180_1990.c:211: 
  Reusing old results for call to IEEE_1180_1990_mkbk
[eva] tests/idct/ieee_1180_1990.c:212: 
  Reusing old results for call to IEEE_1180_1990_dctf
[eva] tests/idct/ieee_1180_1990.c:213: 
  Reusing old results for call to IEEE_1180_1990_idctf
[eva] tests/idct/ieee_1180_1990.c:214: Reusing old results for call to idct
[eva:alarm] tests/idct/ieee_1180_1990.c:357: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[i].pmse[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:368: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[i].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:369: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:355: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:357: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:358: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[i].pmse[j][k]);
[eva] tests/idct/ieee_1180_1990.c:368: Warning: 
  2's complement assumed for overflow
[eva:alarm] tests/idct/ieee_1180_1990.c:369: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[i].pme[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:369: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[i].pme[j][k]);
[eva:alarm] tests/idct/ieee_1180_1990.c:369: Warning: 
  accessing uninitialized left-value. assert \initialized(&res[i].pme[j][k]);
[eva] tests/idct/ieee_1180_1990.c:354: starting to merge loop iterations
[eva] tests/idct/ieee_1180_1990.c:389: Warning: 
  2's complement assumed for overflow
[eva] tests/idct/ieee_1180_1990.c:350: starting to merge loop iterations
[eva] Recording results for main
[eva] done for function main
[scope:rm_asserts] removing 16 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function IEEE_1180_1990_rand:
  i ∈ [0..2147483646]
  j ∈ [0..600]
  x ∈ [0.0000000000000000 .. 600.9999997201375663]
  IEEE_1180_1990_rand_randx ∈ [--..--]
  __retres ∈ [-300..300]
[eva:final-states] Values at end of function IEEE_1180_1990_mkbk:
  i ∈ {8}
  j ∈ {8} or UNINITIALIZED
  M1[0..7][0..7] ∈ [--..--]
  IEEE_1180_1990_rand_randx ∈ [--..--]
[eva:final-states] Values at end of function IEEE_1180_1990_dctf:
  i ∈ {8}
  j ∈ {8} or UNINITIALIZED
  k ∈ {8} or UNINITIALIZED
  tmp1[0..7][0..7] ∈
      [-1.9999998807907104*2^127 .. 1.9999998807907104*2^127] or UNINITIALIZED
  tmp2[0..7][0..7] ∈
      [-1.6867516709168837*2^265 .. 1.6867516709168837*2^265] or UNINITIALIZED
  m2[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  IEEE_1180_1990_dctf_mcos[0..7][0..7] ∈
                          [-1.0000000000000000*2^-1 .. 1.0000000000000000*2^-1]
  IEEE_1180_1990_dctf_init ∈ {0}
[eva:final-states] Values at end of function IEEE_1180_1990_idctf:
  i ∈ {8}
  j ∈ {8} or UNINITIALIZED
  k ∈ {8} or UNINITIALIZED
  tmp1[0..7][0..7] ∈
      [-1.9999998807907104*2^127 .. 1.9999998807907104*2^127] or UNINITIALIZED
  tmp2[0..7][0..7] ∈
      [-1.6867516709168837*2^265 .. 1.6867516709168837*2^265] or UNINITIALIZED
  m3[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  IEEE_1180_1990_idctf_mcos[0..7][0..7] ∈
                           [-1.0000000000000000*2^-1 .. 1.0000000000000000*2^-1]
  IEEE_1180_1990_idctf_init ∈ {0}
[eva:final-states] Values at end of function idct:
  m2[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  m4[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  i ∈ {8}
  j ∈ {8} or UNINITIALIZED
  k ∈ {8} or UNINITIALIZED
  tmp1[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  tmp2[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  ftmp1 ∈
       [-1.0000610351562500*2^13 .. 1.0000610351562500*2^13] or UNINITIALIZED
  ftmp2 ∈
       [-1.0000610351562500*2^13 .. 1.0000610351562500*2^13] or UNINITIALIZED
  idct_init ∈ {0}
  idct_mc1[0..7][0..7] ∈ [-8192..8192]
  idct_mc2[0..7][0..7] ∈ [-8192..8192]
[eva:final-states] Values at end of function main:
  res[0..5] ∈ [--..--] or UNINITIALIZED
  i ∈ {6}
  j ∈ {8}
  k ∈ {8} or UNINITIALIZED
  m2[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  m3[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  m4[0..7][0..7] ∈ [--..--] or UNINITIALIZED
  succ ∈ {0; 1}
  omse ∈ [--..--] or UNINITIALIZED
  ome ∈ [--..--] or UNINITIALIZED
  err ∈ [--..--] or UNINITIALIZED
  M1[0..7][0..7] ∈ [--..--]
  IEEE_1180_1990_rand_randx ∈ [--..--]
  IEEE_1180_1990_dctf_mcos[0..7][0..7] ∈
                          [-1.0000000000000000*2^-1 .. 1.0000000000000000*2^-1]
  IEEE_1180_1990_dctf_init ∈ {0; 1}
  IEEE_1180_1990_idctf_mcos[0..7][0..7] ∈
                           [-1.0000000000000000*2^-1 .. 1.0000000000000000*2^-1]
  IEEE_1180_1990_idctf_init ∈ {0; 1}
  idct_init ∈ {0}
  idct_mc1[0..7][0..7] ∈ [-8192..8192]
  idct_mc2[0..7][0..7] ∈ [-8192..8192]
  __retres ∈ {0; 1}
  S___fc_stdout[0..1] ∈ [--..--]
[from] Computing for function IEEE_1180_1990_rand
[from] Done for function IEEE_1180_1990_rand
[from] Computing for function IEEE_1180_1990_mkbk
[from] Done for function IEEE_1180_1990_mkbk
[from] Computing for function IEEE_1180_1990_dctf
[from] Computing for function sqrt <-IEEE_1180_1990_dctf
[from] Done for function sqrt
[from] Computing for function cos <-IEEE_1180_1990_dctf
[from] Done for function cos
[from] Done for function IEEE_1180_1990_dctf
[from] Computing for function IEEE_1180_1990_idctf
[from] Done for function IEEE_1180_1990_idctf
[from] Computing for function idct
[from] Done for function idct
[from] Computing for function main
[from] Computing for function printf_va_1 <-main
[from] Done for function printf_va_1
[from] Computing for function printf_va_2 <-main
[from] Done for function printf_va_2
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function IEEE_1180_1990_rand:
  IEEE_1180_1990_rand_randx FROM IEEE_1180_1990_rand_randx
  \result FROM L; H; IEEE_1180_1990_rand_randx; IEEE_1180_1990_rand_z
[from] Function IEEE_1180_1990_mkbk:
  M1[0..7][0..7] FROM min; max; IEEE_1180_1990_rand_randx;
                      IEEE_1180_1990_rand_z (and SELF)
  IEEE_1180_1990_rand_randx FROM IEEE_1180_1990_rand_randx (and SELF)
[from] Function cos:
  \result FROM x
[from] Function printf_va_1:
  S___fc_stdout[0].__fc_FILE_data
               FROM S___fc_stdout[0];
                    "For all-zero input, the proposed IDCT shall generate all-zero "[bits 0 to 503] (and SELF)
  \result FROM S___fc_stdout[0];
               "For all-zero input, the proposed IDCT shall generate all-zero "[bits 0 to 503]
[from] Function printf_va_2:
  S___fc_stdout[0].__fc_FILE_data
               FROM S___fc_stdout[0]; "output.\n"[bits 0 to 71] (and SELF)
  \result FROM S___fc_stdout[0]; "output.\n"[bits 0 to 71]
[from] Function sqrt:
  \result FROM x
[from] Function IEEE_1180_1990_dctf:
  m2[0..7][0..7] FROM m1; m2; M1[0..7][0..7];
                      IEEE_1180_1990_dctf_mcos[0..7][0..7];
                      IEEE_1180_1990_dctf_init (and SELF)
  IEEE_1180_1990_dctf_mcos[0..7][0..7] FROM IEEE_1180_1990_dctf_init (and SELF)
  IEEE_1180_1990_dctf_init FROM IEEE_1180_1990_dctf_init (and SELF)
[from] Function IEEE_1180_1990_idctf:
  m3[0..7][0..7] FROM m1; m2; m2[0..7][0..7];
                      IEEE_1180_1990_idctf_mcos[0..7][0..7];
                      IEEE_1180_1990_idctf_init (and SELF)
  IEEE_1180_1990_idctf_mcos[0..7][0..7] FROM IEEE_1180_1990_idctf_init (and SELF)
  IEEE_1180_1990_idctf_init FROM IEEE_1180_1990_idctf_init (and SELF)
[from] Function idct:
  m2[0..7][0..7] FROM m2[0..7][0..7]; m1; m2; M1[0..7][0..7]; idct_init;
                      idct_mc1[0..7][0..7]; idct_mc2[0..7][0..7] (and SELF)
  m4[0..7][0..7] FROM m2[0..7][0..7]; m1; m2; M1[0..7][0..7]; idct_init;
                      idct_mc1[0..7][0..7]; idct_mc2[0..7][0..7] (and SELF)
  idct_init FROM idct_init (and SELF)
  idct_mc1[0..7][0..7] FROM idct_init (and SELF)
  idct_mc2[0..7][0..7] FROM idct_init (and SELF)
[from] Function main:
  M1[0..7][0..7] FROM M1[0..7][0..7]; IEEE_1180_1990_rand_randx;
                      IEEE_1180_1990_rand_z (and SELF)
  IEEE_1180_1990_rand_randx FROM IEEE_1180_1990_rand_randx (and SELF)
  IEEE_1180_1990_dctf_mcos[0..7][0..7] FROM IEEE_1180_1990_dctf_init (and SELF)
  IEEE_1180_1990_dctf_init FROM IEEE_1180_1990_dctf_init (and SELF)
  IEEE_1180_1990_idctf_mcos[0..7][0..7] FROM IEEE_1180_1990_idctf_init (and SELF)
  IEEE_1180_1990_idctf_init FROM IEEE_1180_1990_idctf_init (and SELF)
  idct_init FROM idct_init (and SELF)
  idct_mc1[0..7][0..7] FROM idct_init (and SELF)
  idct_mc2[0..7][0..7] FROM idct_init (and SELF)
  S___fc_stdout[0].__fc_FILE_data
               FROM M1[0..7][0..7]; idct_init; idct_mc1[0..7][0..7];
                    idct_mc2[0..7][0..7]; S___fc_stdout[0];
                    "For all-zero input, the proposed IDCT shall generate all-zero "[bits 0 to 503];
                     "output.\n"[bits 0 to 71] (and SELF)
  \result FROM M1[0..7][0..7]; IEEE_1180_1990_rand_randx;
               IEEE_1180_1990_rand_z; IEEE_1180_1990_dctf_mcos[0..7][0..7];
               IEEE_1180_1990_dctf_init;
               IEEE_1180_1990_idctf_mcos[0..7][0..7];
               IEEE_1180_1990_idctf_init; idct_init; idct_mc1[0..7][0..7];
               idct_mc2[0..7][0..7]
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function IEEE_1180_1990_rand:
    i; j; x; IEEE_1180_1990_rand_randx; __retres
[inout] Inputs for function IEEE_1180_1990_rand:
    IEEE_1180_1990_rand_randx; IEEE_1180_1990_rand_z
[inout] Out (internal) for function IEEE_1180_1990_mkbk:
    i; j; M1[0..7][0..7]; IEEE_1180_1990_rand_randx
[inout] Inputs for function IEEE_1180_1990_mkbk:
    IEEE_1180_1990_rand_randx; IEEE_1180_1990_rand_z
[inout] Out (internal) for function IEEE_1180_1990_dctf:
    i; j; k; tmp1[0..7][0..7]; tmp2[0..7][0..7]; tmp; tmp_0; tmp_1;
    m2[0..7][0..7]; IEEE_1180_1990_dctf_mcos[0..7][0..7];
    IEEE_1180_1990_dctf_init
[inout] Inputs for function IEEE_1180_1990_dctf:
    M1[0..7][0..7]; IEEE_1180_1990_dctf_mcos[0..7][0..7];
    IEEE_1180_1990_dctf_init
[inout] Out (internal) for function IEEE_1180_1990_idctf:
    i; j; k; tmp1[0..7][0..7]; tmp2[0..7][0..7]; tmp; tmp_0; tmp_1;
    m3[0..7][0..7]; IEEE_1180_1990_idctf_mcos[0..7][0..7];
    IEEE_1180_1990_idctf_init
[inout] Inputs for function IEEE_1180_1990_idctf:
    m2[0..7][0..7]; IEEE_1180_1990_idctf_mcos[0..7][0..7];
    IEEE_1180_1990_idctf_init
[inout] Out (internal) for function idct:
    m2[0..7][0..7]; m4[0..7][0..7]; i; j; k; tmp1[0..7][0..7];
    tmp2[0..7][0..7]; ftmp1; ftmp2; tmp; tmp_0; tmp_1; idct_init;
    idct_mc1[0..7][0..7]; idct_mc2[0..7][0..7]
[inout] Inputs for function idct:
    m2[0..7][0..7]; M1[0..7][0..7]; idct_init; idct_mc1[0..7][0..7];
    idct_mc2[0..7][0..7]
[inout] Out (internal) for function main:
    res[0..5]; i; j; k; m2[0..7][0..7]; m3[0..7][0..7]; m4[0..7][0..7]; 
    succ; omse; ome; err; tmp; tmp_0; tmp_1; tmp_2; tmp_3; tmp_4; tmp_5; 
    tmp_6; M1[0..7][0..7]; IEEE_1180_1990_rand_randx;
    IEEE_1180_1990_dctf_mcos[0..7][0..7]; IEEE_1180_1990_dctf_init;
    IEEE_1180_1990_idctf_mcos[0..7][0..7]; IEEE_1180_1990_idctf_init;
    idct_init; idct_mc1[0..7][0..7]; idct_mc2[0..7][0..7]; __retres;
    S___fc_stdout[0].__fc_FILE_data
[inout] Inputs for function main:
    M1[0..7][0..7]; IEEE_1180_1990_rand_randx; IEEE_1180_1990_rand_z;
    IEEE_1180_1990_dctf_mcos[0..7][0..7]; IEEE_1180_1990_dctf_init;
    IEEE_1180_1990_idctf_mcos[0..7][0..7]; IEEE_1180_1990_idctf_init;
    idct_init; idct_mc1[0..7][0..7]; idct_mc2[0..7][0..7]; S___fc_stdout[0];
    "For all-zero input, the proposed IDCT shall generate all-zero "[bits 0 to 503];
     "output.\n"[bits 0 to 71]
[report] Computing properties status...
--------------------------------------------------------------------------------
--- Global Properties
--------------------------------------------------------------------------------

[ Extern  ] Axiom 'memchr_def'
            axiom memchr_def
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'memcmp_strlen_left'
            axiom memcmp_strlen_left
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'memcmp_strlen_right'
            axiom memcmp_strlen_right
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'memcmp_strlen_shift_left'
            axiom memcmp_strlen_shift_left
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'memcmp_strlen_shift_right'
            axiom memcmp_strlen_shift_right
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'memcmp_zero'
            axiom memcmp_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'memset_def'
            axiom memset_def
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strchr_def'
            axiom strchr_def
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strcmp_zero'
            axiom strcmp_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_at_null'
            axiom strlen_at_null
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_before_null'
            axiom strlen_before_null
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_create'
            axiom strlen_create
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_create_shift'
            axiom strlen_create_shift
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_neg'
            axiom strlen_neg
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_not_zero'
            axiom strlen_not_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_pos_or_null'
            axiom strlen_pos_or_null
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_shift'
            axiom strlen_shift
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_sup'
            axiom strlen_sup
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strlen_zero'
            axiom strlen_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'strncmp_zero'
            axiom strncmp_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcschr_def'
            axiom wcschr_def
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcscmp_zero'
            axiom wcscmp_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_at_null'
            axiom wcslen_at_null
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_before_null'
            axiom wcslen_before_null
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_create'
            axiom wcslen_create
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_create_shift'
            axiom wcslen_create_shift
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_neg'
            axiom wcslen_neg
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_not_zero'
            axiom wcslen_not_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_pos_or_null'
            axiom wcslen_pos_or_null
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_shift'
            axiom wcslen_shift
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_sup'
            axiom wcslen_sup
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcslen_zero'
            axiom wcslen_zero
            Unverifiable but considered Valid.
[ Extern  ] Axiom 'wcsncmp_zero'
            axiom wcsncmp_zero
            Unverifiable but considered Valid.
[  Valid  ] Axiomatic 'MemChr'
            axiomatic MemChr
            by Frama-C kernel.
[  Valid  ] Axiomatic 'MemCmp'
            axiomatic MemCmp
            by Frama-C kernel.
[  Valid  ] Axiomatic 'MemSet'
            axiomatic MemSet
            by Frama-C kernel.
[  Valid  ] Axiomatic 'StrChr'
            axiomatic StrChr
            by Frama-C kernel.
[  Valid  ] Axiomatic 'StrCmp'
            axiomatic StrCmp
            by Frama-C kernel.
[  Valid  ] Axiomatic 'StrLen'
            axiomatic StrLen
            by Frama-C kernel.
[  Valid  ] Axiomatic 'StrNCmp'
            axiomatic StrNCmp
            by Frama-C kernel.
[  Valid  ] Axiomatic 'WcsChr'
            axiomatic WcsChr
            by Frama-C kernel.
[  Valid  ] Axiomatic 'WcsCmp'
            axiomatic WcsCmp
            by Frama-C kernel.
[  Valid  ] Axiomatic 'WcsLen'
            axiomatic WcsLen
            by Frama-C kernel.
[  Valid  ] Axiomatic 'WcsNCmp'
            axiomatic WcsNCmp
            by Frama-C kernel.
[  Valid  ] Axiomatic 'format_length'
            axiomatic format_length
            by Frama-C kernel.
[  Valid  ] Axiomatic 'pipe_streams'
            axiomatic pipe_streams
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'remove'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'rename'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'tmpfile'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_null_or_valid_fd'
            ensures
            result_null_or_valid_fd:
              \result ≡ \null ∨
              \subset(\result, &__fc_fopen[0 .. 16 - 1])
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 80)
            assigns \result \from __fc_p_fopen;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'tmpnam'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 87)
            assigns \result, *(s + (..));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 87)
            assigns \result \from *(s + (..));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 88)
            assigns *(s + (..)) \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fclose'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_zero_or_EOF'
            ensures result_zero_or_EOF: \result ≡ 0 ∨ \result ≡ -1
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 95)
            assigns \result \from stream, stream->__fc_FILE_id;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fflush'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_zero_or_EOF'
            ensures result_zero_or_EOF: \result ≡ 0 ∨ \result ≡ -1
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 103)
            assigns \result \from stream, stream->__fc_FILE_id;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fopen'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_null_or_valid_fd'
            ensures
            result_null_or_valid_fd:
              \result ≡ \null ∨
              \subset(\result, &__fc_fopen[0 .. 16 - 1])
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 112)
            assigns \result
              \from (indirect: *(filename + (..))),
                    (indirect: *(mode + (..))), __fc_p_fopen;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fdopen'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_null_or_valid_fd'
            ensures
            result_null_or_valid_fd:
              \result ≡ \null ∨
              \subset(\result, &__fc_fopen[0 .. 16 - 1])
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 121)
            assigns \result, __fc_fopen[fd];
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 121)
            assigns \result
              \from (indirect: fd), (indirect: *(mode + (0 ..))),
                    (indirect: __fc_fopen[fd]), __fc_p_fopen;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 121)
            assigns __fc_fopen[fd]
              \from (indirect: fd), (indirect: *(mode + (0 ..))),
                    (indirect: __fc_fopen[fd]), __fc_p_fopen;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'freopen'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_null_or_valid_fd'
            ensures
            result_null_or_valid_fd:
              \result ≡ \null ∨ \result ∈ &__fc_fopen[0 .. 16 - 1]
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'stream_opened'
            ensures stream_opened: *\old(stream) ∈ __fc_fopen[0 .. 16 - 1]
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 132)
            assigns \result, *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 132)
            assigns \result
              \from (indirect: *(filename + (..))),
                    (indirect: *(mode + (..))), __fc_p_fopen,
                    (indirect: stream);
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 134)
            assigns *stream
              \from (indirect: *(filename + (..))),
                    (indirect: *(mode + (..))), __fc_p_fopen,
                    (indirect: stream);
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'setbuf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 145)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 145)
            assigns *stream \from buf;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'setvbuf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 149)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 149)
            assigns *stream \from buf, mode, size;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'vfprintf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 178)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 178)
            assigns *stream \from *(format + (..)), arg;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'vfscanf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 183)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 183)
            assigns *stream \from *(format + (..)), *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'vprintf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 189)
            assigns *__fc_stdout;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 189)
            assigns *__fc_stdout \from arg;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'vscanf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 193)
            assigns *__fc_stdin;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 193)
            assigns *__fc_stdin \from *(format + (..));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'vsnprintf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 198)
            assigns *(s + (0 .. n - 1));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 198)
            assigns *(s + (0 .. n - 1)) \from *(format + (..)), arg;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'vsprintf'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 204)
            assigns *(s + (0 ..));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 204)
            assigns *(s + (0 ..)) \from *(format + (..)), arg;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fgetc'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_uchar_or_eof'
            ensures
            result_uchar_or_eof: (0 ≤ \result ≤ 255) ∨ \result ≡ -1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 217)
            assigns *stream, \result;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 217)
            assigns *stream \from *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 218)
            assigns \result \from (indirect: *stream);
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fgets'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_null_or_same'
            ensures
            result_null_or_same: \result ≡ \null ∨ \result ≡ \old(s)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'terminated_string_on_success'
            ensures
            terminated_string_on_success:
              \result ≢ \null ⇒ valid_string(\old(s))
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 225)
            assigns *(s + (0 .. size)), \result;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 225)
            assigns *(s + (0 .. size))
              \from (indirect: size), (indirect: *stream);
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 226)
            assigns \result \from s, (indirect: size), (indirect: *stream);
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fputc'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 234)
            assigns *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fputs'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 237)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 237)
            assigns *stream \from *(s + (..));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'getc'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 241)
            assigns \result, *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 241)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 241)
            assigns *stream \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'getchar'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 244)
            assigns \result \from *__fc_stdin;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'gets'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_null_or_same'
            ensures
            result_null_or_same: \result ≡ \old(s) ∨ \result ≡ \null
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 248)
            assigns *(s + (..)), \result;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 248)
            assigns *(s + (..)) \from *__fc_stdin;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 249)
            assigns \result \from s, __fc_stdin;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'putc'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 254)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 254)
            assigns *stream \from c;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'putchar'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 257)
            assigns *__fc_stdout;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 257)
            assigns *__fc_stdout \from c;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'puts'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 260)
            assigns *__fc_stdout;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 260)
            assigns *__fc_stdout \from *(s + (..));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ungetc'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 263)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 263)
            assigns *stream \from c;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fread'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'size_read'
            ensures size_read: \result ≤ \old(nmemb)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'initialization'
            ensures
            initialization:
              \initialized((char *)\old(ptr) +
                           (0 .. \result * \old(size) - 1))
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 269)
            assigns *((char *)ptr + (0 .. nmemb * size - 1)), \result;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 269)
            assigns *((char *)ptr + (0 .. nmemb * size - 1))
              \from size, nmemb, *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 270)
            assigns \result \from size, *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fwrite'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'size_written'
            ensures size_written: \result ≤ \old(nmemb)
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 282)
            assigns *stream, \result;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 282)
            assigns *stream \from *((char *)ptr + (0 .. nmemb * size - 1));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 282)
            assigns \result \from *((char *)ptr + (0 .. nmemb * size - 1));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fgetpos'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 290)
            assigns *pos;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 290)
            assigns *pos \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fseek'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 297)
            assigns *stream, \result, __fc_errno;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 297)
            assigns *stream
              \from *stream, (indirect: offset), (indirect: whence);
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 298)
            assigns \result
              \from (indirect: *stream), (indirect: offset),
                    (indirect: whence);
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 298)
            assigns __fc_errno
              \from (indirect: *stream), (indirect: offset),
                    (indirect: whence);
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fsetpos'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 303)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 303)
            assigns *stream \from *pos;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ftell'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'success_or_error'
            ensures
            success_or_error:
              \result ≡ -1 ∨
              (\result ≥ 0 ∧ __fc_errno ≡ \old(__fc_errno))
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 308)
            assigns \result, __fc_errno;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 308)
            assigns \result \from (indirect: *stream);
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 308)
            assigns __fc_errno \from (indirect: *stream);
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'rewind'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 314)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 314)
            assigns *stream \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'clearerr'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 317)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 317)
            assigns *stream \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'feof'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 320)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fileno'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 323)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'flockfile'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 326)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 326)
            assigns *stream \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'funlockfile'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 329)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 329)
            assigns *stream \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ftrylockfile'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 332)
            assigns \result, *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 332)
            assigns \result \from \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 332)
            assigns *stream \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ferror'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 335)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'perror'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 338)
            assigns __fc_stdout;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 338)
            assigns __fc_stdout \from __fc_errno, *(s + (..));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'getc_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 341)
            assigns \result, *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 341)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 341)
            assigns *stream \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'getchar_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 343)
            assigns \result \from *__fc_stdin;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'putc_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 345)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 345)
            assigns *stream \from c;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'putchar_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 347)
            assigns *__fc_stdout;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 347)
            assigns *__fc_stdout \from c;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'clearerr_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns (file share/libc/stdio.h, line 350)
            assigns *stream;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 350)
            assigns *stream \from \nothing;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'feof_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 352)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ferror_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 354)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fileno_unlocked'
--------------------------------------------------------------------------------

[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 356)
            assigns \result \from *stream;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'popen'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_error_or_valid_open_pipe'
            ensures
            result_error_or_valid_open_pipe:
              \result ≡ \null ∨
              (\subset(\result, &__fc_fopen[0 .. 16 - 1]) ∧
               is_open_pipe(\result))
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/stdio.h, line 381)
            assigns \result, __fc_fopen[0 ..];
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 381)
            assigns \result
              \from (indirect: *command), (indirect: *type), __fc_p_fopen;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 383)
            assigns __fc_fopen[0 ..]
              \from (indirect: *command), (indirect: *type), __fc_fopen[0 ..];
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'pclose'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'closed_stream'
            ensures closed_stream: ¬is_open_pipe(\old(stream))
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/stdio.h, line 395)
            assigns \result \from (indirect: *stream);
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function '__fc_fpclassifyf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'nan' 'fp_nan'
            ensures fp_nan: \result ≡ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'inf' 'fp_infinite'
            ensures fp_infinite: \result ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'zero' 'fp_zero'
            ensures fp_zero: \result ≡ 2
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'subnormal' 'fp_subnormal'
            ensures fp_subnormal: \result ≡ 3
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'normal' 'fp_normal'
            ensures fp_normal: \result ≡ 4
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 73)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'inf'
            behavior inf
            by Frama-C kernel.
[  Valid  ] Behavior 'nan'
            behavior nan
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.
[  Valid  ] Behavior 'subnormal'
            behavior subnormal
            by Frama-C kernel.
[  Valid  ] Behavior 'zero'
            behavior zero
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function '__fc_fpclassify'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'nan' 'fp_nan'
            ensures fp_nan: \result ≡ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'inf' 'fp_infinite'
            ensures fp_infinite: \result ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'zero' 'fp_zero'
            ensures fp_zero: \result ≡ 2
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'subnormal' 'fp_subnormal'
            ensures fp_subnormal: \result ≡ 3
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'normal' 'fp_normal'
            ensures fp_normal: \result ≡ 4
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 97)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'inf'
            behavior inf
            by Frama-C kernel.
[  Valid  ] Behavior 'nan'
            behavior nan
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.
[  Valid  ] Behavior 'subnormal'
            behavior subnormal
            by Frama-C kernel.
[  Valid  ] Behavior 'zero'
            behavior zero
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'acos'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'positive_result'
            ensures positive_result: \is_finite(\result) ∧ \result ≥ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 134)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 141)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 134)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 134)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 141)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 141)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 137)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'acosf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'positive_result'
            ensures positive_result: \is_finite(\result) ∧ \result ≥ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 148)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 155)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 148)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 148)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 155)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 155)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 151)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'acosl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'positive_result'
            ensures positive_result: \is_finite(\result) ∧ \result ≥ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 162)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 169)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 162)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 162)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 169)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 169)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 165)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'asin'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 176)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 183)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 176)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 176)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 183)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 183)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 179)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'asinf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 190)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 197)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 190)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 190)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 197)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 197)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 193)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'asinl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 204)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 211)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 204)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 204)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 211)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 211)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 207)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'atanf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1.571 ≤ \result ≤ 1.571
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 218)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'atan'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1.571 ≤ \result ≤ 1.571
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 225)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'atanl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1.571 ≤ \result ≤ 1.571
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 232)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'atan2'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 240)
            assigns \result \from x, y;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'atan2f'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 247)
            assigns \result \from x, y;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'cos'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition 'finite_arg'
            requires finite_arg: \is_finite(x)
            by Call Preconditions.
[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1. ≤ \result ≤ 1.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 255)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'cosf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1. ≤ \result ≤ 1.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 262)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'cosl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1. ≤ \result ≤ 1.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 269)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'sin'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1. ≤ \result ≤ 1.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 276)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'sinf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1. ≤ \result ≤ 1.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 283)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'sinl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'result_domain'
            ensures result_domain: -1. ≤ \result ≤ 1.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 290)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'acosh'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'positive_result'
            ensures positive_result: \is_finite(\result) ∧ \result ≥ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'infinite' 'result_plus_infinity'
            ensures result_plus_infinity: \is_plus_infinity(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 301)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 312)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'infinite' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 301)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 301)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 312)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 312)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'infinite' (file share/libc/math.h, line 308)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 304)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'infinite'
            behavior infinite
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'acoshf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'positive_result'
            ensures positive_result: \is_finite(\result) ∧ \result ≥ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'infinite' 'result_plus_infinity'
            ensures result_plus_infinity: \is_plus_infinity(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 319)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 330)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'infinite' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 319)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 319)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 330)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 330)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'infinite' (file share/libc/math.h, line 326)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 322)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'infinite'
            behavior infinite
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'acoshl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition for 'normal' 'positive_result'
            ensures positive_result: \is_finite(\result) ∧ \result ≥ 0
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'infinite' 'result_plus_infinity'
            ensures result_plus_infinity: \is_plus_infinity(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition for 'domain_error' 'errno_set'
            ensures errno_set: __fc_errno ≡ 1
            Unverifiable but considered Valid.
[ Extern  ] Assigns (file share/libc/math.h, line 337)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'domain_error' (file share/libc/math.h, line 348)
            assigns __fc_errno, \result;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'infinite' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Assigns for 'normal' nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 337)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 337)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 348)
            assigns __fc_errno \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'domain_error' (file share/libc/math.h, line 348)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'infinite' (file share/libc/math.h, line 344)
            assigns \result \from x;
            Unverifiable but considered Valid.
[ Extern  ] Froms for 'normal' (file share/libc/math.h, line 340)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.
[  Valid  ] Behavior 'domain_error'
            behavior domain_error
            by Frama-C kernel.
[  Valid  ] Behavior 'infinite'
            behavior infinite
            by Frama-C kernel.
[  Valid  ] Behavior 'normal'
            behavior normal
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'exp'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'res_finite'
            ensures res_finite: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result > 0.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 376)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'expf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'res_finite'
            ensures res_finite: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result > 0.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 384)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 414)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'logf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 421)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'logl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 428)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log10'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 435)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log10f'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 442)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log10l'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 449)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log2'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 460)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log2f'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 467)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'log2l'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 474)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fabs'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'res_finite'
            ensures res_finite: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result ≥ 0.
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'equal_magnitude_result'
            ensures
            equal_magnitude_result:
              \result ≡ \old(x) ∨ \result ≡ -\old(x)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 500)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fabsf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'res_finite'
            ensures res_finite: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result ≥ 0.
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'equal_magnitude_result'
            ensures
            equal_magnitude_result:
              \result ≡ \old(x) ∨ \result ≡ -\old(x)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 508)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fabsl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'res_finite'
            ensures res_finite: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result ≥ 0.
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'equal_magnitude_result'
            ensures
            equal_magnitude_result:
              \result ≡ \old(x) ∨ \result ≡ -\old(x)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 516)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'pow'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 529)
            assigns \result \from x, y;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'powf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 536)
            assigns \result \from x, y;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'sqrt'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition 'finite_arg'
            requires finite_arg: \is_finite(x)
            by Call Preconditions.
[  Valid  ] Pre-condition 'arg_positive'
            requires arg_positive: x ≥ -0.
            by Call Preconditions.
[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result ≥ -0.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 545)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'sqrtf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result ≥ -0.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 553)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'sqrtl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Post-condition 'positive_result'
            ensures positive_result: \result ≥ -0.
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 561)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ceil'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 584)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ceilf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 590)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'ceill'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 597)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'floor'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 603)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'floorf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 609)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'floorl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 615)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'round'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 637)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'roundf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 643)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'roundl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 649)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'trunc'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 663)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'truncf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 669)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'truncl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 675)
            assigns \result \from x;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fmod'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 682)
            assigns \result \from x, y;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'fmodf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'finite_result'
            ensures finite_result: \is_finite(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 689)
            assigns \result \from x, y;
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'nan'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_is_nan'
            ensures result_is_nan: \is_NaN(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 710)
            assigns \result \from (indirect: *(tagp + (0 ..)));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'nanf'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_is_nan'
            ensures result_is_nan: \is_NaN(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 717)
            assigns \result \from (indirect: *(tagp + (0 ..)));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'nanl'
--------------------------------------------------------------------------------

[ Extern  ] Post-condition 'result_is_nan'
            ensures result_is_nan: \is_NaN(\result)
            Unverifiable but considered Valid.
[ Extern  ] Assigns nothing
            assigns \nothing;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file share/libc/math.h, line 724)
            assigns \result \from (indirect: *(tagp + (0 ..)));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'idct'
--------------------------------------------------------------------------------

[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 129)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 131)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 141)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 143)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 145)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 147)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/idct.c, line 145)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 150)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/idct.c, line 145)
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 163)
            assert Eva: initialization: \initialized(&tmp2[k][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 163)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 166)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 176)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 178)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 180)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 182)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/idct.c, line 180)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 185)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/idct.c, line 180)
[    -    ] Assertion 'Eva,initialization' (file tests/idct/idct.c, line 129)
            assert Eva: initialization: \initialized(&(*(m1 + k))[j]);
            tried with Eva.
[  Valid  ] Instance of 'Pre-condition 'finite_arg'' at call 'sqrt' (file tests/idct/idct.c, line 90)

            status of 'requires
            finite_arg: \is_finite(x)' of sqrt at stmt 525
            by Eva.
[  Valid  ] Instance of 'Pre-condition 'arg_positive'' at call 'sqrt' (file tests/idct/idct.c, line 90)

            status of 'requires arg_positive: x ≥ -0.' of sqrt at stmt 525
            by Eva.
[  Valid  ] Instance of 'Pre-condition 'finite_arg'' at call 'cos' (file tests/idct/idct.c, line 91)

            status of 'requires finite_arg: \is_finite(x)' of cos at stmt 528
            by Eva.

--------------------------------------------------------------------------------
--- Properties of Function 'IEEE_1180_1990_dctf'
--------------------------------------------------------------------------------

[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 109)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 116)
            assert Eva: initialization: \initialized(&tmp1[i][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 116)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 117)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 119)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 117)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 121)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 117)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 122)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 117)
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 122)
            assert Eva: float_to_int: -2147483649 < tmp2[i][j] + 0.5;
            tried with Eva.
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 122)
            assert Eva: float_to_int: tmp2[i][j] + 0.5 < 2147483648;
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 124)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 117)
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 124)
            assert Eva: float_to_int: -2147483649 < tmp2[i][j] - 0.5;
            tried with Eva.
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 124)
            assert Eva: float_to_int: tmp2[i][j] - 0.5 < 2147483648;
            tried with Eva.
[  Valid  ] Instance of 'Pre-condition 'finite_arg'' at call 'sqrt' (file tests/idct/ieee_1180_1990.c, line 100)

            status of 'requires finite_arg: \is_finite(x)' of sqrt at stmt 41
            by Eva.
[  Valid  ] Instance of 'Pre-condition 'arg_positive'' at call 'sqrt' (file tests/idct/ieee_1180_1990.c, line 100)

            status of 'requires arg_positive: x ≥ -0.' of sqrt at stmt 41
            by Eva.
[  Valid  ] Instance of 'Pre-condition 'finite_arg'' at call 'cos' (file tests/idct/ieee_1180_1990.c, line 101)

            status of 'requires finite_arg: \is_finite(x)' of cos at stmt 44
            by Eva.

--------------------------------------------------------------------------------
--- Properties of Function 'IEEE_1180_1990_idctf'
--------------------------------------------------------------------------------

[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 150)
            assert Eva: initialization: \initialized(&(*(m1 + k))[j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 150)
            assert Eva: initialization: \initialized(&tmp1[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 157)
            assert Eva: initialization: \initialized(&tmp1[i][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 157)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 158)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 160)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 158)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 162)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 158)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 163)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 158)
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 163)
            assert Eva: float_to_int: -2147483649 < tmp2[i][j] + 0.5;
            tried with Eva.
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 163)
            assert Eva: float_to_int: tmp2[i][j] + 0.5 < 2147483648;
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 165)
            assert Eva: initialization: \initialized(&tmp2[i][j]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 158)
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 165)
            assert Eva: float_to_int: -2147483649 < tmp2[i][j] - 0.5;
            tried with Eva.
[    -    ] Assertion 'Eva,float_to_int' (file tests/idct/ieee_1180_1990.c, line 165)
            assert Eva: float_to_int: tmp2[i][j] - 0.5 < 2147483648;
            tried with Eva.
[  Valid  ] Instance of 'Pre-condition 'finite_arg'' at call 'sqrt' (file tests/idct/ieee_1180_1990.c, line 140)

            status of 'requires
            finite_arg: \is_finite(x)' of sqrt at stmt 121
            by Eva.
[  Valid  ] Instance of 'Pre-condition 'arg_positive'' at call 'sqrt' (file tests/idct/ieee_1180_1990.c, line 140)

            status of 'requires arg_positive: x ≥ -0.' of sqrt at stmt 121
            by Eva.
[  Valid  ] Instance of 'Pre-condition 'finite_arg'' at call 'cos' (file tests/idct/ieee_1180_1990.c, line 141)

            status of 'requires finite_arg: \is_finite(x)' of cos at stmt 124
            by Eva.

--------------------------------------------------------------------------------
--- Properties of Function 'main'
--------------------------------------------------------------------------------

[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 191)
            assert Eva: initialization: \initialized(&m2[i][j]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 218)
            assert Eva: initialization: \initialized(&m3[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 218)
            assert Eva: initialization: \initialized(&m4[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 219)
            assert Eva: initialization: \initialized(&res[0].pme[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 231)
            assert Eva: initialization: \initialized(&res[0].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 242)
            assert Eva: initialization: \initialized(&m3[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 242)
            assert Eva: initialization: \initialized(&m4[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 243)
            assert Eva: initialization: \initialized(&res[3].pme[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 255)
            assert Eva: initialization: \initialized(&res[3].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 264)
            assert Eva: initialization: \initialized(&m3[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 264)
            assert Eva: initialization: \initialized(&m4[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 265)
            assert Eva: initialization: \initialized(&res[1].pme[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 277)
            assert Eva: initialization: \initialized(&res[1].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 288)
            assert Eva: initialization: \initialized(&m3[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 288)
            assert Eva: initialization: \initialized(&m4[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 289)
            assert Eva: initialization: \initialized(&res[4].pme[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 301)
            assert Eva: initialization: \initialized(&res[4].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 310)
            assert Eva: initialization: \initialized(&m3[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 310)
            assert Eva: initialization: \initialized(&m4[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 311)
            assert Eva: initialization: \initialized(&res[2].pme[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 323)
            assert Eva: initialization: \initialized(&res[2].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 334)
            assert Eva: initialization: \initialized(&m3[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 334)
            assert Eva: initialization: \initialized(&m4[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 335)
            assert Eva: initialization: \initialized(&res[5].pme[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 347)
            assert Eva: initialization: \initialized(&res[5].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 357)
            assert Eva: initialization: \initialized(&res[i].pmse[j][k]);
            tried with Eva.
[    -    ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 368)
            assert Eva: initialization: \initialized(&res[i].pme[j][k]);
            tried with Eva.
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 358)
            assert Eva: initialization: \initialized(&res[i].pmse[j][k]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 357)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 369)
            assert Eva: initialization: \initialized(&res[i].pme[j][k]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 368)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 369)
            assert Eva: initialization: \initialized(&res[i].pme[j][k]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 368)
[ Partial ] Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 369)
            assert Eva: initialization: \initialized(&res[i].pme[j][k]);
            By RedundantAlarms, with pending:
             - Assertion 'Eva,initialization' (file tests/idct/ieee_1180_1990.c, line 368)
[  Valid  ] Instance of 'Pre-condition (file tests/idct/ieee_1180_1990.c, line 195)' at call 'printf_va_1' (file tests/idct/ieee_1180_1990.c, line 195)

            status of 'requires
            valid_read_string(format)' of printf_va_1 at stmt 238
            by Eva.
[  Valid  ] Instance of 'Pre-condition (file tests/idct/ieee_1180_1990.c, line 196)' at call 'printf_va_2' (file tests/idct/ieee_1180_1990.c, line 196)

            status of 'requires
            valid_read_string(format)' of printf_va_2 at stmt 239
            by Eva.

--------------------------------------------------------------------------------
--- Properties of Function 'printf_va_1'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition (file tests/idct/ieee_1180_1990.c, line 195)
            requires valid_read_string(format)
            by Call Preconditions.
[ Extern  ] Assigns (file tests/idct/ieee_1180_1990.c, line 195)
            assigns \result, __fc_stdout->__fc_FILE_data;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file tests/idct/ieee_1180_1990.c, line 195)
            assigns __fc_stdout->__fc_FILE_data
              \from (indirect: __fc_stdout->__fc_FILE_id),
                    __fc_stdout->__fc_FILE_data,
                    (indirect: *(format + (0 ..)));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file tests/idct/ieee_1180_1990.c, line 195)
            assigns \result
              \from (indirect: __fc_stdout->__fc_FILE_id),
                    __fc_stdout->__fc_FILE_data,
                    (indirect: *(format + (0 ..)));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Properties of Function 'printf_va_2'
--------------------------------------------------------------------------------

[  Valid  ] Pre-condition (file tests/idct/ieee_1180_1990.c, line 196)
            requires valid_read_string(format)
            by Call Preconditions.
[ Extern  ] Assigns (file tests/idct/ieee_1180_1990.c, line 196)
            assigns \result, __fc_stdout->__fc_FILE_data;
            Unverifiable but considered Valid.
[ Extern  ] Froms (file tests/idct/ieee_1180_1990.c, line 196)
            assigns __fc_stdout->__fc_FILE_data
              \from (indirect: __fc_stdout->__fc_FILE_id),
                    __fc_stdout->__fc_FILE_data,
                    (indirect: *(format + (0 ..)));
            Unverifiable but considered Valid.
[ Extern  ] Froms (file tests/idct/ieee_1180_1990.c, line 196)
            assigns \result
              \from (indirect: __fc_stdout->__fc_FILE_id),
                    __fc_stdout->__fc_FILE_data,
                    (indirect: *(format + (0 ..)));
            Unverifiable but considered Valid.
[  Valid  ] Default behavior
            default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
   173 Completely validated
    16 Locally validated
   448 Considered valid
    56 To be validated
   693 Total
--------------------------------------------------------------------------------
