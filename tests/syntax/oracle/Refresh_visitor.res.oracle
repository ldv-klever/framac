[kernel] Parsing share/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/syntax/Refresh_visitor.i (no preprocessing)
Start
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value:initial-state] Values of globals at initialization
  
tests/syntax/Refresh_visitor.i:17:[value] warning: assertion got status unknown.
tests/syntax/Refresh_visitor.i:23:[value] loop invariant got status valid.
tests/syntax/Refresh_visitor.i:24:[value] loop invariant got status valid.
tests/syntax/Refresh_visitor.i:26:[value] entering loop for the first time
tests/syntax/Refresh_visitor.i:29:[value] loop invariant got status valid.
tests/syntax/Refresh_visitor.i:30:[value] loop invariant got status valid.
tests/syntax/Refresh_visitor.i:32:[value] entering loop for the first time
tests/syntax/Refresh_visitor.i:14:[value] warning: function main: postcondition got status unknown.
[value] Recording results for main
[value] done for function main
/* Generated by Frama-C */
struct S {
   int i ;
};
struct matrix {
   int m[100] ;
};
/*@ lemma foo: ∀ struct S x; x.i ≥ 0 ∨ x.i < 0;
 */
/*@ ensures \result ≥ \old(x.i); */
int main(struct S x, struct matrix m)
{
  struct matrix m_t;
  int y = x.i;
  /*@ assert y ≡ x.i; */ ;
  int i = 0;
  int j = 0;
  i = 0;
  /*@ loop invariant 0 ≤ i ≤ 2;
      loop invariant 0 ≤ j ≤ 2;
      loop assigns i, j, m_t;
  */
  while (i < 2) {
    j = 0;
    /*@ loop invariant 0 ≤ j ≤ 2;
        loop invariant 0 ≤ i < 2;
        loop assigns j, m_t;
    */
    while (j < 2) {
      m_t.m[i * 2 + j] = m.m[j * 2 + i];
      j ++;
    }
    i ++;
  }
  return y;
}


